'use strict';var cov_17lryt2we1=function(){var path="/data/data/com.termux/files/home/rovelapi/extra/rss-reader/src/Feed.js";var hash="1a27112b74fae84bef473d8c4a17e2ead4741203";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/data/data/com.termux/files/home/rovelapi/extra/rss-reader/src/Feed.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:40}},"1":{start:{line:4,column:16},end:{line:4,column:34}},"2":{start:{line:5,column:18},end:{line:5,column:40}},"3":{start:{line:6,column:17},end:{line:6,column:38}},"4":{start:{line:12,column:23},end:{line:16,column:1}},"5":{start:{line:26,column:32},end:{line:26,column:33}},"6":{start:{line:33,column:19},end:{line:33,column:94}},"7":{start:{line:39,column:22},end:{line:39,column:91}},"8":{start:{line:60,column:4},end:{line:60,column:15}},"9":{start:{line:66,column:4},end:{line:66,column:13}},"10":{start:{line:72,column:4},end:{line:72,column:17}},"11":{start:{line:80,column:4},end:{line:80,column:19}},"12":{start:{line:86,column:4},end:{line:86,column:19}},"13":{start:{line:92,column:4},end:{line:92,column:26}},"14":{start:{line:94,column:4},end:{line:97,column:14}},"15":{start:{line:99,column:4},end:{line:99,column:37}},"16":{start:{line:99,column:21},end:{line:99,column:37}},"17":{start:{line:100,column:4},end:{line:100,column:71}},"18":{start:{line:100,column:19},end:{line:100,column:71}},"19":{start:{line:101,column:4},end:{line:101,column:44}},"20":{start:{line:101,column:23},end:{line:101,column:44}},"21":{start:{line:102,column:4},end:{line:102,column:53}},"22":{start:{line:102,column:25},end:{line:102,column:53}},"23":{start:{line:103,column:4},end:{line:103,column:53}},"24":{start:{line:103,column:25},end:{line:103,column:53}},"25":{start:{line:117,column:4},end:{line:124,column:7}},"26":{start:{line:119,column:6},end:{line:119,column:53}},"27":{start:{line:119,column:21},end:{line:119,column:53}},"28":{start:{line:121,column:6},end:{line:121,column:47}},"29":{start:{line:121,column:19},end:{line:121,column:47}},"30":{start:{line:123,column:6},end:{line:123,column:68}},"31":{start:{line:133,column:4},end:{line:133,column:70}},"32":{start:{line:142,column:4},end:{line:142,column:26}},"33":{start:{line:143,column:4},end:{line:143,column:96}},"34":{start:{line:153,column:4},end:{line:169,column:7}},"35":{start:{line:154,column:20},end:{line:154,column:22}},"36":{start:{line:155,column:25},end:{line:155,column:41}},"37":{start:{line:156,column:6},end:{line:160,column:9}},"38":{start:{line:157,column:21},end:{line:157,column:38}},"39":{start:{line:158,column:8},end:{line:158,column:34}},"40":{start:{line:159,column:8},end:{line:159,column:25}},"41":{start:{line:161,column:6},end:{line:163,column:9}},"42":{start:{line:162,column:8},end:{line:162,column:98}},"43":{start:{line:164,column:6},end:{line:166,column:9}},"44":{start:{line:165,column:8},end:{line:165,column:23}},"45":{start:{line:168,column:6},end:{line:168,column:27}},"46":{start:{line:178,column:4},end:{line:195,column:27}},"47":{start:{line:187,column:8},end:{line:189,column:9}},"48":{start:{line:188,column:10},end:{line:188,column:124}},"49":{start:{line:192,column:8},end:{line:192,column:102}},"50":{start:{line:204,column:4},end:{line:208,column:5}},"51":{start:{line:205,column:6},end:{line:205,column:33}},"52":{start:{line:207,column:6},end:{line:207,column:18}},"53":{start:{line:216,column:4},end:{line:216,column:33}},"54":{start:{line:217,column:4},end:{line:217,column:25}},"55":{start:{line:221,column:0},end:{line:221,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:55,column:2},end:{line:55,column:3}},loc:{start:{line:55,column:20},end:{line:104,column:3}},line:55},"1":{name:"(anonymous_1)",decl:{start:{line:116,column:2},end:{line:116,column:3}},loc:{start:{line:116,column:17},end:{line:125,column:3}},line:116},"2":{name:"(anonymous_2)",decl:{start:{line:117,column:27},end:{line:117,column:28}},loc:{start:{line:117,column:38},end:{line:124,column:5}},line:117},"3":{name:"(anonymous_3)",decl:{start:{line:132,column:2},end:{line:132,column:3}},loc:{start:{line:132,column:27},end:{line:134,column:3}},line:132},"4":{name:"(anonymous_4)",decl:{start:{line:141,column:2},end:{line:141,column:3}},loc:{start:{line:141,column:16},end:{line:144,column:3}},line:141},"5":{name:"(anonymous_5)",decl:{start:{line:151,column:2},end:{line:151,column:3}},loc:{start:{line:151,column:14},end:{line:170,column:3}},line:151},"6":{name:"(anonymous_6)",decl:{start:{line:153,column:23},end:{line:153,column:24}},loc:{start:{line:153,column:42},end:{line:169,column:5}},line:153},"7":{name:"(anonymous_7)",decl:{start:{line:156,column:32},end:{line:156,column:33}},loc:{start:{line:156,column:38},end:{line:160,column:7}},line:156},"8":{name:"(anonymous_8)",decl:{start:{line:161,column:29},end:{line:161,column:30}},loc:{start:{line:161,column:35},end:{line:163,column:7}},line:161},"9":{name:"(anonymous_9)",decl:{start:{line:164,column:27},end:{line:164,column:28}},loc:{start:{line:164,column:33},end:{line:166,column:7}},line:164},"10":{name:"(anonymous_10)",decl:{start:{line:177,column:2},end:{line:177,column:3}},loc:{start:{line:177,column:18},end:{line:196,column:3}},line:177},"11":{name:"(anonymous_11)",decl:{start:{line:186,column:22},end:{line:186,column:23}},loc:{start:{line:186,column:31},end:{line:190,column:7}},line:186},"12":{name:"(anonymous_12)",decl:{start:{line:191,column:19},end:{line:191,column:20}},loc:{start:{line:191,column:25},end:{line:193,column:7}},line:191},"13":{name:"(anonymous_13)",decl:{start:{line:195,column:17},end:{line:195,column:18}},loc:{start:{line:195,column:23},end:{line:195,column:25}},line:195},"14":{name:"(anonymous_14)",decl:{start:{line:203,column:2},end:{line:203,column:3}},loc:{start:{line:203,column:21},end:{line:209,column:3}},line:203},"15":{name:"(anonymous_15)",decl:{start:{line:215,column:2},end:{line:215,column:3}},loc:{start:{line:215,column:12},end:{line:218,column:3}},line:215}},branchMap:{"0":{loc:{start:{line:99,column:4},end:{line:99,column:37}},type:"if",locations:[{start:{line:99,column:4},end:{line:99,column:37}},{start:{line:99,column:4},end:{line:99,column:37}}],line:99},"1":{loc:{start:{line:100,column:4},end:{line:100,column:71}},type:"if",locations:[{start:{line:100,column:4},end:{line:100,column:71}},{start:{line:100,column:4},end:{line:100,column:71}}],line:100},"2":{loc:{start:{line:101,column:4},end:{line:101,column:44}},type:"if",locations:[{start:{line:101,column:4},end:{line:101,column:44}},{start:{line:101,column:4},end:{line:101,column:44}}],line:101},"3":{loc:{start:{line:102,column:4},end:{line:102,column:53}},type:"if",locations:[{start:{line:102,column:4},end:{line:102,column:53}},{start:{line:102,column:4},end:{line:102,column:53}}],line:102},"4":{loc:{start:{line:103,column:4},end:{line:103,column:53}},type:"if",locations:[{start:{line:103,column:4},end:{line:103,column:53}},{start:{line:103,column:4},end:{line:103,column:53}}],line:103},"5":{loc:{start:{line:119,column:6},end:{line:119,column:53}},type:"if",locations:[{start:{line:119,column:6},end:{line:119,column:53}},{start:{line:119,column:6},end:{line:119,column:53}}],line:119},"6":{loc:{start:{line:121,column:6},end:{line:121,column:47}},type:"if",locations:[{start:{line:121,column:6},end:{line:121,column:47}},{start:{line:121,column:6},end:{line:121,column:47}}],line:121},"7":{loc:{start:{line:123,column:13},end:{line:123,column:67}},type:"binary-expr",locations:[{start:{line:123,column:13},end:{line:123,column:37}},{start:{line:123,column:41},end:{line:123,column:67}}],line:123},"8":{loc:{start:{line:187,column:8},end:{line:189,column:9}},type:"if",locations:[{start:{line:187,column:8},end:{line:189,column:9}},{start:{line:187,column:8},end:{line:189,column:9}}],line:187},"9":{loc:{start:{line:204,column:4},end:{line:208,column:5}},type:"if",locations:[{start:{line:204,column:4},end:{line:208,column:5}},{start:{line:204,column:4},end:{line:208,column:5}}],line:204}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"1a27112b74fae84bef473d8c4a17e2ead4741203"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const FeedParser=(cov_17lryt2we1.s[0]++,require('feedparser'));const request=(cov_17lryt2we1.s[1]++,require('request'));const FeedError=(cov_17lryt2we1.s[2]++,require('./FeedError'));const FeedItem=(cov_17lryt2we1.s[3]++,require('./FeedItem'));// eslint-disable-line no-unused-vars
/**
 * Map of specially handled error codes
 * @type {Object}
 */const RESPONSE_CODES=(cov_17lryt2we1.s[4]++,{OK:200,NOT_FOUND:404,ISE:500});/**
 * This module manages automatically how many feed items
 * it will keep in memory, and basically it will have a
 * maximum history which is how many items the feed has
 * multiplied by this number below. So, if the feed have
 * 10 items, we will keep 30 items max in the history.
 * @type {Number}
 */const historyLengthMultiplier=(cov_17lryt2we1.s[5]++,3);/**
 * Default UserAgent string
 * Since static stuff doesn't work in older versions, keep using global const
 * @type {String}
 */const DEFAULT_UA=(cov_17lryt2we1.s[6]++,'Node/RssFeedEmitter (https://github.com/filipedeschamps/rss-feed-emitter)');/**
 * Allowed mime types to allow fetching
 * @type {Array<string>}
 */const ALLOWED_MIMES=(cov_17lryt2we1.s[7]++,['text/html','application/xhtml+xml','application/xml','text/xml']);/**
 * Storage object for properties of a feed
 * @class
 * @property {string} url Feed url
 * @property {FeedItem[]} items items currently retrieved from the feed
 * @property {number} refresh timeout between refreshes
 * @property {string} userAgent User Agent string to fetch the feed with
 * @property {string} eventName event name to use when emitting this feed
 */class Feed{/**
   * Create a feed
   * @param {Feed} data object with feed data
   */constructor(data){cov_17lryt2we1.f[0]++;cov_17lryt2we1.s[8]++;/**
     * Array of item
     * @type {FeedItem[]}
     */this.items;// eslint-disable-line no-unused-expressions
/**
     * Feed url for retrieving feed items
     * @type {string}
     */cov_17lryt2we1.s[9]++;this.url;// eslint-disable-line no-unused-expressions
/**
     * Duration between feed refreshes
     * @type {number}
     */cov_17lryt2we1.s[10]++;this.refresh;// eslint-disable-line no-unused-expressions
/**
     * If the user has specified a User Agent
     * we will use that as the 'user-agent' header when
     * making requests, otherwise we use the default option.
     * @type {string}
     */cov_17lryt2we1.s[11]++;this.userAgent;// eslint-disable-line no-unused-expressions
/**
     * event name for this feed to emit when a new item becomes available
     * @type {String}
     */cov_17lryt2we1.s[12]++;this.eventName;// eslint-disable-line no-unused-expressions
/**
     * Maximum history length
     * @type {number}
     */cov_17lryt2we1.s[13]++;this.maxHistoryLength;// eslint-disable-line no-unused-expressions
cov_17lryt2we1.s[14]++;({items:this.items,url:this.url,refresh:this.refresh,userAgent:this.userAgent,eventName:this.eventName}=data);cov_17lryt2we1.s[15]++;if(!this.items){cov_17lryt2we1.b[0][0]++;cov_17lryt2we1.s[16]++;this.items=[];}else{cov_17lryt2we1.b[0][1]++;}cov_17lryt2we1.s[17]++;if(!this.url){cov_17lryt2we1.b[1][0]++;cov_17lryt2we1.s[18]++;throw new TypeError('missing required field `url`');}else{cov_17lryt2we1.b[1][1]++;}cov_17lryt2we1.s[19]++;if(!this.refresh){cov_17lryt2we1.b[2][0]++;cov_17lryt2we1.s[20]++;this.refresh=60000;}else{cov_17lryt2we1.b[2][1]++;}cov_17lryt2we1.s[21]++;if(!this.userAgent){cov_17lryt2we1.b[3][0]++;cov_17lryt2we1.s[22]++;this.userAgent=DEFAULT_UA;}else{cov_17lryt2we1.b[3][1]++;}cov_17lryt2we1.s[23]++;if(!this.eventName){cov_17lryt2we1.b[4][0]++;cov_17lryt2we1.s[24]++;this.eventName='new-item';}else{cov_17lryt2we1.b[4][1]++;}}/**
   * Given a feed and item, try to find
   * it inside the feed item list. We will use
   * this to see if there's already an item inside
   * the feed item list. If there is, we know it's
   * not a new item.
   * @public
   * @param {FeedItem} item item specitics
   * @returns {FeedItem}      the matched element
   */findItem(item){cov_17lryt2we1.f[1]++;cov_17lryt2we1.s[25]++;return this.items.find(entry=>{cov_17lryt2we1.f[2]++;cov_17lryt2we1.s[26]++;// if feed is RSS 2.x, check existence of 'guid'
if(item.guid){cov_17lryt2we1.b[5][0]++;cov_17lryt2we1.s[27]++;return entry.guid===item.guid;}else{cov_17lryt2we1.b[5][1]++;}// if feed is Atom 1.x, check existence of 'id'
cov_17lryt2we1.s[28]++;if(item.id){cov_17lryt2we1.b[6][0]++;cov_17lryt2we1.s[29]++;return entry.id===item.id;}else{cov_17lryt2we1.b[6][1]++;}// default object with 'link' and 'title'
cov_17lryt2we1.s[30]++;return(cov_17lryt2we1.b[7][0]++,entry.link===item.link)&&(cov_17lryt2we1.b[7][1]++,entry.title===item.title);});}/**
   * Update the maximum history length based on the length of a feed retrieval
   * @public
   * @param  {FeedItem[]} newItems new list of items to base the history length on
   */updateHxLength(newItems){cov_17lryt2we1.f[3]++;cov_17lryt2we1.s[31]++;this.maxHistoryLength=newItems.length*historyLengthMultiplier;}/**
   * Add an item to the feed
   * @public
   * @param {FeedItem} item Feed item. Indeterminant structure.
   */addItem(item){cov_17lryt2we1.f[4]++;cov_17lryt2we1.s[32]++;this.items.push(item);cov_17lryt2we1.s[33]++;this.items=this.items.slice(this.items.length-this.maxHistoryLength,this.items.length);}/**
   * Fetch the data for this feed
   * @public
   * @returns {Promise} array of new feed items
   */fetchData(){cov_17lryt2we1.f[5]++;cov_17lryt2we1.s[34]++;// eslint-disable-next-line no-async-promise-executor
return new Promise(async resolve=>{cov_17lryt2we1.f[6]++;const items=(cov_17lryt2we1.s[35]++,[]);const feedparser=(cov_17lryt2we1.s[36]++,new FeedParser());cov_17lryt2we1.s[37]++;feedparser.on('readable',()=>{cov_17lryt2we1.f[7]++;const item=(cov_17lryt2we1.s[38]++,feedparser.read());cov_17lryt2we1.s[39]++;item.meta.link=this.url;cov_17lryt2we1.s[40]++;items.push(item);});cov_17lryt2we1.s[41]++;feedparser.on('error',()=>{cov_17lryt2we1.f[8]++;cov_17lryt2we1.s[42]++;this.handleError(new FeedError(`Cannot parse ${this.url} XML`,'invalid_feed',this.url));});cov_17lryt2we1.s[43]++;feedparser.on('end',()=>{cov_17lryt2we1.f[9]++;cov_17lryt2we1.s[44]++;resolve(items);});cov_17lryt2we1.s[45]++;this.get(feedparser);});}/**
   * Perform the feed parsing
   * @private
   * @param  {FeedParser} feedparser feedparser instance to use for parsing a retrieved feed
   */get(feedparser){cov_17lryt2we1.f[10]++;cov_17lryt2we1.s[46]++;request.get({url:this.url,headers:{'user-agent':this.userAgent,accept:ALLOWED_MIMES.join(',')}}).on('response',res=>{cov_17lryt2we1.f[11]++;cov_17lryt2we1.s[47]++;if(res.statusCode!==RESPONSE_CODES.OK){cov_17lryt2we1.b[8][0]++;cov_17lryt2we1.s[48]++;this.handleError(new FeedError(`This URL returned a ${res.statusCode} status code`,'fetch_url_error',this.url));}else{cov_17lryt2we1.b[8][1]++;}}).on('error',()=>{cov_17lryt2we1.f[12]++;cov_17lryt2we1.s[49]++;this.handleError(new FeedError(`Cannot connect to ${this.url}`,'fetch_url_error',this.url));}).pipe(feedparser).on('end',()=>{cov_17lryt2we1.f[13]++;});}/**
   * Handle errors inside the feed retrieval process
   * @param  {Error} error error to be handled
   * @private
   */handleError(error){cov_17lryt2we1.f[14]++;cov_17lryt2we1.s[50]++;if(this.handler){cov_17lryt2we1.b[9][0]++;cov_17lryt2we1.s[51]++;this.handler.handle(error);}else{cov_17lryt2we1.b[9][1]++;cov_17lryt2we1.s[52]++;throw error;}}/**
   * Destroy feed
   * @public
   */destroy(){cov_17lryt2we1.f[15]++;cov_17lryt2we1.s[53]++;clearInterval(this.interval);cov_17lryt2we1.s[54]++;delete this.interval;}}cov_17lryt2we1.s[55]++;module.exports=Feed;