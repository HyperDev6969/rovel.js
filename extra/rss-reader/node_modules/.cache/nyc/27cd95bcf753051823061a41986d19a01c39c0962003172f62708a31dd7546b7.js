'use strict';var cov_1zdl40a6ia=function(){var path="/data/data/com.termux/files/home/rovelapi/extra/rss-reader/src/FeedEmitter.js";var hash="677a1bf4f92dbebf97b09bcaaa9f327c745f496d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/data/data/com.termux/files/home/rovelapi/extra/rss-reader/src/FeedEmitter.js",statementMap:{"0":{start:{line:3,column:25},end:{line:3,column:42}},"1":{start:{line:5,column:18},end:{line:5,column:40}},"2":{start:{line:6,column:20},end:{line:6,column:44}},"3":{start:{line:7,column:13},end:{line:7,column:30}},"4":{start:{line:14,column:19},end:{line:14,column:94}},"5":{start:{line:20,column:18},end:{line:24,column:1}},"6":{start:{line:21,column:2},end:{line:23,column:3}},"7":{start:{line:22,column:4},end:{line:22,column:101}},"8":{start:{line:30,column:17},end:{line:34,column:1}},"9":{start:{line:31,column:2},end:{line:33,column:3}},"10":{start:{line:32,column:4},end:{line:32,column:121}},"11":{start:{line:40,column:21},end:{line:44,column:1}},"12":{start:{line:41,column:2},end:{line:43,column:3}},"13":{start:{line:42,column:4},end:{line:42,column:115}},"14":{start:{line:61,column:4},end:{line:61,column:20}},"15":{start:{line:62,column:4},end:{line:62,column:19}},"16":{start:{line:63,column:4},end:{line:63,column:23}},"17":{start:{line:64,column:4},end:{line:64,column:56}},"18":{start:{line:73,column:4},end:{line:73,column:12}},"19":{start:{line:80,column:4},end:{line:80,column:23}},"20":{start:{line:89,column:4},end:{line:89,column:39}},"21":{start:{line:96,column:4},end:{line:96,column:47}},"22":{start:{line:120,column:4},end:{line:123,column:5}},"23":{start:{line:121,column:6},end:{line:121,column:49}},"24":{start:{line:121,column:36},end:{line:121,column:47}},"25":{start:{line:122,column:6},end:{line:122,column:27}},"26":{start:{line:125,column:19},end:{line:125,column:36}},"27":{start:{line:127,column:4},end:{line:127,column:59}},"28":{start:{line:129,column:4},end:{line:137,column:5}},"29":{start:{line:130,column:6},end:{line:135,column:9}},"30":{start:{line:131,column:8},end:{line:134,column:11}},"31":{start:{line:136,column:6},end:{line:136,column:27}},"32":{start:{line:139,column:17},end:{line:139,column:33}},"33":{start:{line:141,column:4},end:{line:141,column:35}},"34":{start:{line:143,column:4},end:{line:143,column:25}},"35":{start:{line:155,column:4},end:{line:157,column:5}},"36":{start:{line:156,column:6},end:{line:156,column:103}},"37":{start:{line:159,column:17},end:{line:161,column:6}},"38":{start:{line:163,column:4},end:{line:163,column:41}},"39":{start:{line:172,column:4},end:{line:172,column:25}},"40":{start:{line:180,column:4},end:{line:180,column:52}},"41":{start:{line:180,column:36},end:{line:180,column:50}},"42":{start:{line:181,column:4},end:{line:181,column:25}},"43":{start:{line:182,column:4},end:{line:182,column:23}},"44":{start:{line:191,column:23},end:{line:191,column:42}},"45":{start:{line:192,column:4},end:{line:194,column:5}},"46":{start:{line:193,column:6},end:{line:193,column:42}},"47":{start:{line:196,column:4},end:{line:196,column:29}},"48":{start:{line:206,column:4},end:{line:206,column:73}},"49":{start:{line:206,column:45},end:{line:206,column:71}},"50":{start:{line:218,column:4},end:{line:218,column:20}},"51":{start:{line:219,column:4},end:{line:219,column:49}},"52":{start:{line:221,column:4},end:{line:221,column:29}},"53":{start:{line:231,column:24},end:{line:231,column:51}},"54":{start:{line:232,column:4},end:{line:232,column:33}},"55":{start:{line:233,column:4},end:{line:233,column:79}},"56":{start:{line:244,column:4},end:{line:244,column:22}},"57":{start:{line:244,column:15},end:{line:244,column:22}},"58":{start:{line:246,column:4},end:{line:246,column:19}},"59":{start:{line:247,column:16},end:{line:247,column:66}},"60":{start:{line:247,column:47},end:{line:247,column:65}},"61":{start:{line:248,column:4},end:{line:248,column:33}},"62":{start:{line:252,column:0},end:{line:252,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:18},end:{line:20,column:19}},loc:{start:{line:20,column:28},end:{line:24,column:1}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:17},end:{line:30,column:18}},loc:{start:{line:30,column:27},end:{line:34,column:1}},line:30},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:21},end:{line:40,column:22}},loc:{start:{line:40,column:31},end:{line:44,column:1}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:38},end:{line:65,column:3}},line:60},"4":{name:"(anonymous_4)",decl:{start:{line:72,column:2},end:{line:72,column:3}},loc:{start:{line:72,column:73},end:{line:97,column:3}},line:72},"5":{name:"(anonymous_5)",decl:{start:{line:119,column:2},end:{line:119,column:3}},loc:{start:{line:119,column:25},end:{line:144,column:3}},line:119},"6":{name:"(anonymous_6)",decl:{start:{line:121,column:29},end:{line:121,column:30}},loc:{start:{line:121,column:36},end:{line:121,column:47}},line:121},"7":{name:"(anonymous_7)",decl:{start:{line:130,column:25},end:{line:130,column:26}},loc:{start:{line:130,column:34},end:{line:135,column:7}},line:130},"8":{name:"(anonymous_8)",decl:{start:{line:154,column:2},end:{line:154,column:3}},loc:{start:{line:154,column:14},end:{line:164,column:3}},line:154},"9":{name:"(anonymous_9)",decl:{start:{line:171,column:2},end:{line:171,column:3}},loc:{start:{line:171,column:13},end:{line:173,column:3}},line:171},"10":{name:"(anonymous_10)",decl:{start:{line:179,column:2},end:{line:179,column:3}},loc:{start:{line:179,column:12},end:{line:183,column:3}},line:179},"11":{name:"(anonymous_11)",decl:{start:{line:180,column:26},end:{line:180,column:27}},loc:{start:{line:180,column:36},end:{line:180,column:50}},line:180},"12":{name:"(anonymous_12)",decl:{start:{line:190,column:2},end:{line:190,column:3}},loc:{start:{line:190,column:28},end:{line:197,column:3}},line:190},"13":{name:"(anonymous_13)",decl:{start:{line:205,column:2},end:{line:205,column:3}},loc:{start:{line:205,column:17},end:{line:207,column:3}},line:205},"14":{name:"(anonymous_14)",decl:{start:{line:206,column:30},end:{line:206,column:31}},loc:{start:{line:206,column:45},end:{line:206,column:71}},line:206},"15":{name:"(anonymous_15)",decl:{start:{line:217,column:2},end:{line:217,column:3}},loc:{start:{line:217,column:22},end:{line:222,column:3}},line:217},"16":{name:"(anonymous_16)",decl:{start:{line:230,column:2},end:{line:230,column:3}},loc:{start:{line:230,column:26},end:{line:234,column:3}},line:230},"17":{name:"(anonymous_17)",decl:{start:{line:243,column:2},end:{line:243,column:3}},loc:{start:{line:243,column:27},end:{line:249,column:3}},line:243},"18":{name:"(anonymous_18)",decl:{start:{line:247,column:40},end:{line:247,column:41}},loc:{start:{line:247,column:47},end:{line:247,column:65}},line:247}},branchMap:{"0":{loc:{start:{line:21,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:23,column:3}},{start:{line:21,column:2},end:{line:23,column:3}}],line:21},"1":{loc:{start:{line:31,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:33,column:3}},{start:{line:31,column:2},end:{line:33,column:3}}],line:31},"2":{loc:{start:{line:31,column:6},end:{line:31,column:77}},type:"binary-expr",locations:[{start:{line:31,column:6},end:{line:31,column:15}},{start:{line:31,column:19},end:{line:31,column:77}}],line:31},"3":{loc:{start:{line:31,column:21},end:{line:31,column:76}},type:"binary-expr",locations:[{start:{line:31,column:21},end:{line:31,column:49}},{start:{line:31,column:53},end:{line:31,column:76}}],line:31},"4":{loc:{start:{line:41,column:2},end:{line:43,column:3}},type:"if",locations:[{start:{line:41,column:2},end:{line:43,column:3}},{start:{line:41,column:2},end:{line:43,column:3}}],line:41},"5":{loc:{start:{line:41,column:6},end:{line:41,column:54}},type:"binary-expr",locations:[{start:{line:41,column:6},end:{line:41,column:18}},{start:{line:41,column:22},end:{line:41,column:54}}],line:41},"6":{loc:{start:{line:64,column:21},end:{line:64,column:55}},type:"binary-expr",locations:[{start:{line:64,column:21},end:{line:64,column:35}},{start:{line:64,column:39},end:{line:64,column:41}},{start:{line:64,column:45},end:{line:64,column:55}}],line:64},"7":{loc:{start:{line:72,column:14},end:{line:72,column:71}},type:"default-arg",locations:[{start:{line:72,column:24},end:{line:72,column:71}}],line:72},"8":{loc:{start:{line:120,column:4},end:{line:123,column:5}},type:"if",locations:[{start:{line:120,column:4},end:{line:123,column:5}},{start:{line:120,column:4},end:{line:123,column:5}}],line:120},"9":{loc:{start:{line:129,column:4},end:{line:137,column:5}},type:"if",locations:[{start:{line:129,column:4},end:{line:137,column:5}},{start:{line:129,column:4},end:{line:137,column:5}}],line:129},"10":{loc:{start:{line:155,column:4},end:{line:157,column:5}},type:"if",locations:[{start:{line:155,column:4},end:{line:157,column:5}},{start:{line:155,column:4},end:{line:157,column:5}}],line:155},"11":{loc:{start:{line:192,column:4},end:{line:194,column:5}},type:"if",locations:[{start:{line:192,column:4},end:{line:194,column:5}},{start:{line:192,column:4},end:{line:194,column:5}}],line:192},"12":{loc:{start:{line:244,column:4},end:{line:244,column:22}},type:"if",locations:[{start:{line:244,column:4},end:{line:244,column:22}},{start:{line:244,column:4},end:{line:244,column:22}}],line:244}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"677a1bf4f92dbebf97b09bcaaa9f327c745f496d"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{EventEmitter}=(cov_1zdl40a6ia.s[0]++,require('events'));const FeedError=(cov_1zdl40a6ia.s[1]++,require('./FeedError'));const FeedManager=(cov_1zdl40a6ia.s[2]++,require('./FeedManager'));const Feed=(cov_1zdl40a6ia.s[3]++,require('./Feed'));/**
 * Default UserAgent string
 * Since static stuff doesn't work in older versions, keep using global const
 * @type {String}
 */const DEFAULT_UA=(cov_1zdl40a6ia.s[4]++,'Node/RssFeedEmitter (https://github.com/filipedeschamps/rss-feed-emitter)');/**
 * Validate if the feed exists
 * @param  {Feed} feed feed configuration
 */cov_1zdl40a6ia.s[5]++;const checkFeed=feed=>{cov_1zdl40a6ia.f[0]++;cov_1zdl40a6ia.s[6]++;if(!feed){cov_1zdl40a6ia.b[0][0]++;cov_1zdl40a6ia.s[7]++;throw new FeedError('You must call #add method with a feed configuration object.','type_error');}else{cov_1zdl40a6ia.b[0][1]++;}};/**
 * Validate feed url is a string or array of strings
 * @param  {Feed} feed feed to validate url(s) for
 */cov_1zdl40a6ia.s[8]++;const checkUrl=feed=>{cov_1zdl40a6ia.f[1]++;cov_1zdl40a6ia.s[9]++;if((cov_1zdl40a6ia.b[2][0]++,!feed.url)||(cov_1zdl40a6ia.b[2][1]++,!((cov_1zdl40a6ia.b[3][0]++,typeof feed.url==='string')||(cov_1zdl40a6ia.b[3][1]++,Array.isArray(feed.url))))){cov_1zdl40a6ia.b[1][0]++;cov_1zdl40a6ia.s[10]++;throw new FeedError('Your configuration object should have an "url" key with a string or array value','type_error');}else{cov_1zdl40a6ia.b[1][1]++;}};/**
 * Validate that the feed refresh is valid
 * @param  {Feed} feed feed to validate refresh timeout for
 */cov_1zdl40a6ia.s[11]++;const checkRefresh=feed=>{cov_1zdl40a6ia.f[2]++;cov_1zdl40a6ia.s[12]++;if((cov_1zdl40a6ia.b[5][0]++,feed.refresh)&&(cov_1zdl40a6ia.b[5][1]++,typeof feed.refresh!=='number')){cov_1zdl40a6ia.b[4][0]++;cov_1zdl40a6ia.s[13]++;throw new FeedError('Your configuration object should have a "refresh" key with a number value','type_error');}else{cov_1zdl40a6ia.b[4][1]++;}};/**
 * MAIN CLASS
 * This is where we extend from TinyEmitter and absorve
 * the #emit and #on methods to emit 'new-item' events
 * when we have new feed items.
 * @extends EventEmitter
 * @class
 */class FeedEmitter extends EventEmitter{/**
   * Checks that the feed object is valid
   * @param       {Object} feed to validate
   * @param       {string} ua User Agent string to pass to feeds
   */static validateFeedObject(feed,ua){cov_1zdl40a6ia.f[3]++;cov_1zdl40a6ia.s[14]++;checkFeed(feed);cov_1zdl40a6ia.s[15]++;checkUrl(feed);cov_1zdl40a6ia.s[16]++;checkRefresh(feed);cov_1zdl40a6ia.s[17]++;feed.userAgent=(cov_1zdl40a6ia.b[6][0]++,feed.userAgent)||(cov_1zdl40a6ia.b[6][1]++,ua)||(cov_1zdl40a6ia.b[6][2]++,DEFAULT_UA);}/**
   * The constructor special method is called everytime
   * we create a new instance of this "Class".
   * @param {Object} [options={ userAgent: defaultUA }] [description]
   */constructor(options=(cov_1zdl40a6ia.b[7][0]++,{userAgent:DEFAULT_UA,skipFirstLoad:false})){cov_1zdl40a6ia.f[4]++;cov_1zdl40a6ia.s[18]++;super();/**
     * Array of feeds that are tracked
     * @private
     * @type {Feed[]}
     */cov_1zdl40a6ia.s[19]++;this.feedList=[];/**
     * If the user has specified a User Agent
     * we will use that as the 'user-agent' header when
     * making requests, otherwise we use the default option.
     * @private
     * @type {string}
     */cov_1zdl40a6ia.s[20]++;this.userAgent=options.userAgent;/**
     * Whether or not to skip the normal emit event on first load
     * @private
     * @type {boolean}
     */cov_1zdl40a6ia.s[21]++;this.skipFirstLoad=options.skipFirstLoad;}/**
   * UserFeedConfig typedef
   * @typedef {Object} UserFeedConfig
   * @property {(string|string[])} url Url string or string array. Cannot be null or empty
   * @property {Number} refresh Refresh cycle duration for the feed.
   */ /**
   * ADD
   * The #add method is one of the main ones. Basically it
   * receives one parameter with the feed options, for example:
   * {
   *    url: "http://www.nintendolife.com/feeds/news",
   *    refresh: 2000
   *  }
   * @public
   * @param {UserFeedConfig[]} userFeedConfig user feed config
   * @returns {Feed[]}
   */add(...userFeedConfig){cov_1zdl40a6ia.f[5]++;cov_1zdl40a6ia.s[22]++;if(userFeedConfig.length>1){cov_1zdl40a6ia.b[8][0]++;cov_1zdl40a6ia.s[23]++;userFeedConfig.forEach(f=>{cov_1zdl40a6ia.f[6]++;cov_1zdl40a6ia.s[24]++;return this.add(f);});cov_1zdl40a6ia.s[25]++;return this.feedList;}else{cov_1zdl40a6ia.b[8][1]++;}const config=(cov_1zdl40a6ia.s[26]++,userFeedConfig[0]);cov_1zdl40a6ia.s[27]++;FeedEmitter.validateFeedObject(config,this.userAgent);cov_1zdl40a6ia.s[28]++;if(Array.isArray(config.url)){cov_1zdl40a6ia.b[9][0]++;cov_1zdl40a6ia.s[29]++;config.url.forEach(url=>{cov_1zdl40a6ia.f[7]++;cov_1zdl40a6ia.s[30]++;this.add({...config,url});});cov_1zdl40a6ia.s[31]++;return this.feedList;}else{cov_1zdl40a6ia.b[9][1]++;}const feed=(cov_1zdl40a6ia.s[32]++,new Feed(config));cov_1zdl40a6ia.s[33]++;this.addOrUpdateFeedList(feed);cov_1zdl40a6ia.s[34]++;return this.feedList;}/**
   * REMOVE
   * This is a very simple method and its functionality is
   * remove a feed from the feedList.
   * @public
   * @param  {string} url   URL to add
   * @returns {Feed}     item removed from list
   */remove(url){cov_1zdl40a6ia.f[8]++;cov_1zdl40a6ia.s[35]++;if(typeof url!=='string'){cov_1zdl40a6ia.b[10][0]++;cov_1zdl40a6ia.s[36]++;throw new FeedError('You must call #remove with a string containing the feed url','type_error');}else{cov_1zdl40a6ia.b[10][1]++;}const feed=(cov_1zdl40a6ia.s[37]++,this.findFeed({url}));cov_1zdl40a6ia.s[38]++;return this.removeFromFeedList(feed);}/**
   * List of feeds this emitter is handling
   * @public
   * @returns {Feed[]} Feed arrray
   */get list(){cov_1zdl40a6ia.f[9]++;cov_1zdl40a6ia.s[39]++;return this.feedList;}/**
   * Remove all feeds from feedList
   * @public
   */destroy(){cov_1zdl40a6ia.f[10]++;cov_1zdl40a6ia.s[40]++;this.feedList.forEach(feed=>{cov_1zdl40a6ia.f[11]++;cov_1zdl40a6ia.s[41]++;return feed.destroy();});cov_1zdl40a6ia.s[42]++;delete this.feedList;cov_1zdl40a6ia.s[43]++;this.feedList=[];}/**
   * Add or remove a feed in the feed list
   * @private
   * @param {Feed} feed feed to be removed if it's present or added if it's not
   */addOrUpdateFeedList(feed){cov_1zdl40a6ia.f[12]++;const feedInList=(cov_1zdl40a6ia.s[44]++,this.findFeed(feed));cov_1zdl40a6ia.s[45]++;if(feedInList){cov_1zdl40a6ia.b[11][0]++;cov_1zdl40a6ia.s[46]++;this.removeFromFeedList(feedInList);}else{cov_1zdl40a6ia.b[11][1]++;}cov_1zdl40a6ia.s[47]++;this.addToFeedList(feed);}/**
   * Find and return a feed
   * @private
   * @param  {UserFeedConfig} feed Feed to look up
   * @returns {Feed | null}
   */findFeed(feed){cov_1zdl40a6ia.f[13]++;cov_1zdl40a6ia.s[48]++;return this.feedList.find(feedEntry=>{cov_1zdl40a6ia.f[14]++;cov_1zdl40a6ia.s[49]++;return feedEntry.url===feed.url;});}/**
   * Add a feed to the feed list
   * Side effects:
   *  - Clear feed items list
   *  - Create an interval for the feed
   * @private
   * @param {Feed} feed feed to be added
   */addToFeedList(feed){cov_1zdl40a6ia.f[15]++;cov_1zdl40a6ia.s[50]++;feed.items=[];cov_1zdl40a6ia.s[51]++;feed.interval=this.createSetInterval(feed);cov_1zdl40a6ia.s[52]++;this.feedList.push(feed);}/**
   * Set up a recurring task to check for new items
   * @private
   * @param  {Object} feed Feed to be removed
   * @returns {Interval}      interval for updating the feed
   */createSetInterval(feed){cov_1zdl40a6ia.f[16]++;const feedManager=(cov_1zdl40a6ia.s[53]++,new FeedManager(this,feed));cov_1zdl40a6ia.s[54]++;feedManager.getContent(true);cov_1zdl40a6ia.s[55]++;return setInterval(feedManager.getContent.bind(feedManager),feed.refresh);}/**
   * Remove feed from the feed list
   * Side effects:
   * - Destroys the feed first
   * @private
   * @param  {Feed} feed feed to be removed
   */removeFromFeedList(feed){cov_1zdl40a6ia.f[17]++;cov_1zdl40a6ia.s[56]++;if(!feed){cov_1zdl40a6ia.b[12][0]++;cov_1zdl40a6ia.s[57]++;return;}else{cov_1zdl40a6ia.b[12][1]++;}cov_1zdl40a6ia.s[58]++;feed.destroy();const pos=(cov_1zdl40a6ia.s[59]++,this.feedList.findIndex(e=>{cov_1zdl40a6ia.f[18]++;cov_1zdl40a6ia.s[60]++;return e.url===feed.url;}));cov_1zdl40a6ia.s[61]++;this.feedList.splice(pos,1);}}cov_1zdl40a6ia.s[62]++;module.exports=FeedEmitter;